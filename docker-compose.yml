version: '3'
services:
  config-service:
    container_name: config-service
    build:
      context: ./Configuration-Service
      dockerfile: Dockerfile
    image: devilmustcry/microservice-config-server:0.1
    restart: always
    depends_on:
      - eureka-service
    links:
      - eureka-service
    expose:
      - 8585
    ports:
      - 8585:8585
    networks:
      - emp-network
  eureka-service:
    container_name: eureka-service
    build:
      context: ./Eureka-Service
      dockerfile: Dockerfile
    image: devilmustcry/microservice-eureka-server:0.1
    restart: always
    expose: 
      - 8888
    ports:
      - 8888:8888
    networks:
      - emp-network
  product-service:
    container_name: product-service
    build:
      context: ./Product-Service
      dockerfile: Dockerfile
    image: devilmustcry/microservice-product:0.1
    depends_on:
      - config-service
      - eureka-service
    links:
      - config-service
      - eureka-service
    restart: always
    expose:
      - 8000
    ports:
      - 8000:8000
    environment:
      - eureka.client.enabled=true
      - eureka.host=eureka
      - eureka.instance.preferIpAddress=true
      - spring.profiles.active=production
      - server.port=8000
    entrypoint: /home/application/java/product-service.sh
    networks:
      - emp-network
    hostname: PRODUCT-SERVICE
  pricing-service:
    container_name: pricing-service
    build:
      context: ./Pricing-Service
      dockerfile: Dockerfile
    image: devilmustcry/microservice-pricing:0.1
    restart: always
    expose:
      - 9000
    ports:
      - 9000:9000
    links:
      - config-service
      - eureka-service
    entrypoint: /home/application/java/pricing-service.sh
    networks:
      - emp-network
    hostname: PRICING-SERVICE
    environment:
      - eureka.client.enabled=true
      - eureka.host=eureka
      - eureka.instance.preferIpAddress=true
      - spring.profiles.active=production
      - server.port=9000
  zuul-service:
    container_name: zuul-service
    build:
      context: ./zuul-service
      dockerfile: Dockerfile
    image: devilmustcry/microservice-zuul:0.1
    restart: always
    expose: 
      - 9999
    ports:
      - 9999:9999
    links:
      - config-service
      - eureka-service
    environment:
      - spring.profiles.active=production
      - server.port=9999
    entrypoint: /home/application/java/zuul-service.sh
    networks: 
      - emp-network
    hostname: ZUUL-SERVICE
networks:
  emp-network:
      driver: bridge
    
    